{
    "title": "JSON schema for the TypeScript compiler's configuration file with TSTL",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "allOf": [
        {
            "$ref": "https://json.schemastore.org/tsconfig"
        }
    ],
    "properties": {
        "tstl": {
            "definitions": {
                "//": {
                    "reference": "https://typescripttolua.github.io/docs/configuration#custom-options"
                }
            },
            "type": "object",
            "description": "TSTL compiler configuration",
            "properties": {
                "buildMode": {
                    "type": "string",
                    "default": "library",
                    "description": "Use buildMode: \"library\" to build publishable library packages.",
                    "enum": ["default", "library"]
                },
                "noImplicitSelf": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, treats all project files as if they were prefixed with\n/** @noSelfInFile **/."
                },
                "noHeader": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set this to true if you don't want to include our header in the output."
                },
                "luaBundle": {
                    "type": "string",
                    "description": "Will bundle all output lua files into a single bundle file. Requires luaBundleEntry to be set!"
                },
                "luaBundleEntry": {
                    "type": "string",
                    "description": "This should be the name/path of the TS file in your project that will serve as entry point to the bundled code."
                },
                "luaTarget": {
                    "type": "string",
                    "default": "universal",
                    "description": "Specifies the Lua version you want to generate code for. Choosing universal makes TypeScriptToLua generate code compatible with all supported Lua targets.",
                    "enum": ["universal", "5.1", "5.2", "5.3", "5.4", "JIT"]
                },
                "luaLibImport": {
                    "type": "string",
                    "default": "require",
                    "description": "We polyfill certain JavaScript features with Lua functions, this option specifies how these functions are imported into the Lua output.",
                    "enum": ["none", "always", "inline", "require"]
                },
                "sourceMapTraceback": {
                    "type": "boolean",
                    "default": false,
                    "description": "Overrides Lua's debug.traceback to apply sourcemaps to Lua stacktraces. This will make error messages point to your original TypeScript code instead of the generated Lua."
                },
                "luaPlugins": {
                    "type": "array",
                    "description": "List of TypeScriptToLua plugins.",
                    "items": {
                        "type": "object",
                        "description": "",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Path to the JS file, that contains the plugin code"
                            },
                            "import": {
                                "type": "string"
                            }
                        },
                        "required": ["name"]
                    }
                },
                "tstlVerbose": {
                    "type": "boolean",
                    "default": false,
                    "description": "Output additional logging when performing a tstl build, to help diagnose issues."
                }
            }
        }
    }
}
